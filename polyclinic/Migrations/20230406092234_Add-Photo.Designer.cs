// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using polyclinic.Models;

#nullable disable

namespace polyclinic.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230406092234_Add-Photo")]
    partial class AddPhoto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicPolyclinic", b =>
                {
                    b.Property<int>("MedicsId")
                        .HasColumnType("int");

                    b.Property<int>("PolyclinicsId")
                        .HasColumnType("int");

                    b.HasKey("MedicsId", "PolyclinicsId");

                    b.HasIndex("PolyclinicsId");

                    b.ToTable("MedicPolyclinic");
                });

            modelBuilder.Entity("polyclinic.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Тирасполь"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Бендеры"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Каменка"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Слободзея"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Григориополь"
                        });
                });

            modelBuilder.Entity("polyclinic.Models.Medic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medic");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Врач",
                            Experience = "10 лет",
                            FullDescription = "Классный врач",
                            FullName = "Валерий Леонтьев Педросович",
                            Phone = "111111",
                            PhotoPath = "",
                            Price = 121
                        },
                        new
                        {
                            Id = 2,
                            Description = "Врач",
                            Experience = "20 лет",
                            FullDescription = "Очень классный врач",
                            FullName = "Григорий Леонтьев Педросович",
                            Phone = "22222",
                            PhotoPath = "",
                            Price = 222
                        },
                        new
                        {
                            Id = 3,
                            Description = "Врач",
                            Experience = "30 лет",
                            FullDescription = "Супер врач",
                            FullName = "Владислав Кириленко Васильевич",
                            Phone = "33333",
                            PhotoPath = "",
                            Price = 332
                        });
                });

            modelBuilder.Entity("polyclinic.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("polyclinic.Models.Polyclinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Polyclinic");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Гагарина 11",
                            CityId = 1,
                            Name = "Поликлиника №1",
                            Phone = "21313",
                            PhotoPath = ""
                        },
                        new
                        {
                            Id = 2,
                            Address = "Гагарина 21",
                            CityId = 2,
                            Name = "Поликлиника №2",
                            Phone = "21213",
                            PhotoPath = ""
                        },
                        new
                        {
                            Id = 3,
                            Address = "Гагарина 31",
                            CityId = 3,
                            Name = "Поликлиника №3",
                            Phone = "23213",
                            PhotoPath = ""
                        });
                });

            modelBuilder.Entity("polyclinic.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MedicId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicId");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicId = 1,
                            Name = "Психолог"
                        },
                        new
                        {
                            Id = 2,
                            MedicId = 2,
                            Name = "Невролог"
                        },
                        new
                        {
                            Id = 3,
                            MedicId = 2,
                            Name = "Терапевт"
                        },
                        new
                        {
                            Id = 4,
                            MedicId = 3,
                            Name = "Кардиолог"
                        },
                        new
                        {
                            Id = 5,
                            MedicId = 3,
                            Name = "Психотерапевт"
                        });
                });

            modelBuilder.Entity("polyclinic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MedicPolyclinic", b =>
                {
                    b.HasOne("polyclinic.Models.Medic", null)
                        .WithMany()
                        .HasForeignKey("MedicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("polyclinic.Models.Polyclinic", null)
                        .WithMany()
                        .HasForeignKey("PolyclinicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("polyclinic.Models.Photo", b =>
                {
                    b.HasOne("polyclinic.Models.Medic", null)
                        .WithMany("Photos")
                        .HasForeignKey("MedicId");
                });

            modelBuilder.Entity("polyclinic.Models.Polyclinic", b =>
                {
                    b.HasOne("polyclinic.Models.City", "City")
                        .WithMany("Polyclinics")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("polyclinic.Models.Specialization", b =>
                {
                    b.HasOne("polyclinic.Models.Medic", "Medic")
                        .WithMany("Specializations")
                        .HasForeignKey("MedicId");

                    b.Navigation("Medic");
                });

            modelBuilder.Entity("polyclinic.Models.City", b =>
                {
                    b.Navigation("Polyclinics");
                });

            modelBuilder.Entity("polyclinic.Models.Medic", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Specializations");
                });
#pragma warning restore 612, 618
        }
    }
}
